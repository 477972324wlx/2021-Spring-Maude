fmod LIST-NAT is
  protecting NAT .

  sort List-Nat .
  subsort Nat < List-Nat .

  op nil :      -> List-Nat [ctor] .
  op _,_ : Nat List-Nat -> List-Nat [ctor] .
 


  var x : Nat .
  var z : Nat .
  var y : List-Nat .


  op append : List-Nat Nat -> List-Nat .
  eq append (nil, x) = x,nil .
  eq append ((x,y),z) = x,append(y,z) .

  op len : List-Nat -> Nat .
  eq len (nil) = 0 .
  eq len (x,y) = 1 + len(y) .

  op rev : List-Nat -> List-Nat .
  eq rev(nil) = nil .
  eq rev(x,y) = append (rev(y) , x) .

  

endfm

